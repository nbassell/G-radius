{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/background.js","webpack:///./src/bullet.js","webpack:///./src/column.js","webpack:///./src/column_section.js","webpack:///./src/destructible_section.js","webpack:///./src/empty_section.js","webpack:///./src/g-radius.js","webpack:///./src/game.js","webpack:///./src/key_handler.js","webpack:///./src/player.js","webpack:///./src/util.js","webpack:///./src/virus.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,WAAW,OAAO;;;AAGH;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACzBA;AAAA;AAAe;AACf,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAA6C;AACY;;AAE1C;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAmB;AAC7C,OAAO;AACP,0BAA0B,uDAAa;AACvC;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;AACA;;AAEA;AACA,gB;AACA;AACA;AACA;AACA,8B;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACrCA;AAAA;AAAA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAA;AAA6C;;AAE9B,kCAAkC,uDAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACJ;AACY;;AAEtC;AACA;;AAEgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAAI;AACvB,yBAAyB,mDAAU;AACnC;AACA;AACA,CAAC;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACQ;AACC;AACT;AACF;AACe;AACjB;;AAEX;AACf;AACA;AACA;AACA,sBAAsB,+CAAM;AAC5B,0BAA0B,oDAAU;AACpC,0BAA0B,mDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAkB;AAC5C;;AAEA;AACA;AACA,4BAA4B,+CAAM;AAClC;AACA;;AAEA;AACA;AACA,4BAA4B,8CAAK;AACjC;AACA;;AAEA;AACA;AACA;AACA,YAAY,6CAAI;AAChB;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAc,6CAAI;AAClB;AACA;AACA;AACA,kDAAkD,sDAAY;AAC9D;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,UAAU,6CAAI;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,YAAY,6CAAI;AAChB;AACA;AACA,YAAY,6CAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,C;;;;;;;;;;;;AClOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACA;;AAEQ;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAA8B;AAC+B;AACtB;;AAExB;AACf;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,kDAAK;AACb,4BAA4B,+CAAM;AAClC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB,uBAAuB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,+CAAE;AACV;AACA;AACA;;AAEA;AACA,QAAQ,iDAAI;AACZ;AACA;AACA;;AAEA;AACA,QAAQ,iDAAI;AACZ;AACA;AACA;;AAEA;AACA,QAAQ,kDAAK;AACb;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,mEAAI,EAAC;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAA0B;;AAEX;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,C","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/g-radius.js\");\n","// import { W, H } from './g-radius';\n\n\nexport default class Background {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.background = new Image();\n    this.background.src = './assets/images/muscle-cells.png';\n    this.background.onload = () => {\n      this.ctx.drawImage(this.background, 0, 0, 1000, 500);\n    }\n    this.scrollVal = 0;\n  }\n\n  drawBackground() {\n    // this.ctx.clearRect(0, 0, W, H);\n    if (this.scrollVal >= 1000) {\n      this.scrollVal = 0;\n    }\n    this.scrollVal += 4.5;\n    this.ctx.fillStyle = '#8B1C15';\n    this.ctx.fillRect(0, 0, 1000, 500);\n    this.ctx.drawImage(this.background, -this.scrollVal, 0, 1000, 500);\n    this.ctx.drawImage(this.background, 1000 -this.scrollVal, 0, 1000, 500);\n  }\n}","export default class Bullet {\n  constructor({ctx, x, y, dx, dy}) {\n    this.ctx = ctx;\n    this.image = new Image();\n    this.image.src = './assets/images/bullet.png';\n    this.pos = { x, y, dx, dy };\n    this.size = { x: 25, y: 25 };\n  }\n\n  drawBullet() {\n    this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n  }\n\n  update() {\n    this.pos.x += this.pos.dx;\n    this.pos.y += this.pos.dy;\n  }\n}\n\n\n","import ColumnSection from './column_section';\nimport DestructibleSection from './destructible_section';\n\nexport default class Column {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.speed = 5;\n    this.sections = this.setColumn();\n    this.destructibleIdx = null;\n  }\n  \n  setColumn() {\n    let destructibleIdx = Math.floor(Math.random() * 5);\n    let sections = [];\n    let i = 0;\n    while (i < 5) {\n      if (i === destructibleIdx) {\n        sections.push(new DestructibleSection(this.ctx, i));\n      } else {\n        sections.push(new ColumnSection(this.ctx, i));\n      }\n      i++;\n    }\n    this.pos = { x: sections[0].pos.x };\n    this.size = { x: sections[0].size.x };\n    return sections;\n  }\n\n  drawColumn() {\n    this.pos = { \n      x: this.sections[0].pos.x < 1050 ? this.sections[0].pos.x : this.sections[1].pos.x };\n    this.sections.forEach((section) => {\n      if (section !== null) {\n        section.drawSection();    \n      }\n    })\n  }\n}\n\n\n","// import Column from './column';\n\nexport default class ColumnSection {\n  constructor(ctx, idx) {\n    this.ctx = ctx;\n    this.idx = idx;\n    this.image = new Image();\n    this.image.src = './assets/images/artery-wall.png';\n    this.pos = { x: 1010, y: (this.idx * 100) }\n    this.size = { x: 120, y: 100 };\n  }\n\n  drawSection() {\n    this.pos.x -= 3;\n    this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n  }\n}","import ColumnSection from './column_section';\n\nexport default class DestructibleSection extends ColumnSection {\n  constructor(ctx, idx) {\n    super(ctx, idx)\n    this.image = new Image();\n    this.image.src = './assets/images/plaque-in-artery.png';\n    this.health = 4;\n  }\n\n  // isHit() {\n  //   this.health -= 1;\n  //   if (this.health <= 0) {\n      \n  //   }\n  // }\n\n  // drawSection() {\n  //   this.pos.x -= 5;\n  //   this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n  // }\n}","export default class EmptySection {\n  constructor(ctx, idx) {\n    this.ctx = ctx;\n    this.idx = idx;\n    this.image = new Image();\n    this.image.src = './assets/images/artery-wall.png';\n    this.pos = { x: 1050, y: (this.idx * 100) }\n    this.size = { x: 0, y: 0 };\n  }\n\n  drawSection() {\n    // this.pos.x -= 5;\n    // this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n\n  }\n}","import Player from './player';\nimport Game from './game';\nimport Background from './background';\n\nconst W = 1000;\nconst H = 500;\n\nexport { W, H };\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = W;\n  canvas.height = H;\n  const play_again = document.getElementsByClassName(\"play-again-btn\")[0];\n  play_again.classList.add('hide');\n  const game = new Game(ctx, canvas);\n  const background = new Background(ctx);\n  background.drawBackground();\n  game.start();\n})\n\n","import Player from './player';\nimport Background from './background';\nimport KeyHandler from './key_handler';\nimport Column from './column';\nimport Virus from './virus';\nimport EmptySection from './empty_section';\nimport Util from './util';\n\nexport default class Game {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.player = new Player(ctx);\n    this.keyHandler = new KeyHandler(this.player);\n    this.background = new Background(ctx);\n    this.play = this.play.bind(this);\n    this.columnCollisionCheck = this.columnCollisionCheck.bind(this);\n    this.bulletCollisionCheck = this.bulletCollisionCheck.bind(this);\n    this.virusPlayerCheck = this.virusPlayerCheck.bind(this);\n    this.virusWallCheck = this.virusWallCheck.bind(this);\n    this.addKeyListeners = this.addKeyListeners.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n    this.bullets = [];\n    this.columns = [];\n    this.viruses = [];\n    this.timer = 0;\n    this.score = document.getElementById('score');\n    this.play_again = document.getElementsByClassName(\"play-again-btn\")[0];\n    this.start_btn = document.getElementsByClassName(\"start-btn\")[0];\n    this.instructions = document.getElementsByClassName(\"instruction-list\")[0];\n    this.score.innerHTML = '0';\n    this.dead = false;\n  }\n\n  start() {\n    this.addKeyListeners();\n    // this.background.drawBackground();\n  }\n  \n  restartGame() {\n    // window.location.reload();\n    // this.addKeyListeners();\n    this.start_btn.classList.add('hide');\n    this.instructions.classList.remove('hide');\n    this.background.drawBackground();\n    this.bullets = [];\n    this.columns = [];\n    this.viruses = [];\n    this.timer = 0;\n    this.state = {\n      paused: false,\n    };\n    this.player.xVel = 4;\n    this.player.xYel = 6;\n    this.dead = false;\n    this.play_again.classList.add('hide');\n    this.score.innerHTML = '0';\n    this.play();\n  }\n\n  updateScore() {\n    this.score.innerHTML = parseInt(this.score.innerHTML) + 1;\n  }\n\n\n  addKeyListeners() {\n    this.play_again.addEventListener('click', this.restartGame.bind(this), false);\n    this.start_btn.addEventListener('click', this.restartGame.bind(this), false);\n  }\n\n  togglePause() {\n    this.paused = false ? this.paused = true : this.paused = false;\n  }\n\n  spawnColumn() {\n    if (this.timer % 180 === 0) {\n      this.columns.push(new Column(this.ctx));\n    }\n  }\n\n  spawnVirus() {\n    if (this.timer % 180 === 60 && this.timer > 800) {\n      this.viruses.push(new Virus(this.ctx));\n    }\n  }\n\n  columnCollisionCheck() {\n    this.columns.forEach((column) => {\n      column.sections.forEach((section) => {\n        if (Util.isCollided(this.player, section)) {\n          this.gameOver();\n        }\n      });\n    })\n  }\n\n  bulletCollisionCheck() {\n    this.columns.forEach((column, i) => {\n      column.sections.forEach((section, j) => {\n        this.player.bullets.forEach((bullet, k) => {\n          if (Util.isCollided(bullet, section)) {\n            if (section.health) {\n              section.health -= 1;\n              if (section.health <= 0) {\n                this.columns[i].sections[j] = new EmptySection;\n              }\n            }\n            this.player.bullets.splice(k, 1);\n          }\n        })\n      })\n    })\n  }\n\n  virusPlayerCheck() {\n    this.viruses.forEach((virus) => {\n      if (Util.isCollided(this.player, virus)) {\n        this.gameOver();\n      }\n    })\n  }\n\n  virusWallCheck() {\n    this.columns.forEach((column) => {\n      this.viruses.forEach((virus) => {\n        if (Util.isCollidedLeft(virus, column) && virus.xVel < 0) {\n          virus.xVel = Math.abs(virus.xVel);\n        }\n        if (Util.isCollidedRight(virus, column) && virus.xVel > 0) {\n          virus.xVel = Math.abs(virus.xVel) * -1;\n        }\n        if ((virus.pos.x + virus.size.x >= 1000) && virus.xVel > 0) {\n          virus.xVel = Math.abs(virus.xVel) * -1;\n        }\n        if (virus.pos.y <= 0) {\n          virus.yVel = Math.abs(virus.yVel);\n        }\n        if ((virus.pos.y + virus.size.y) >= 499) {\n          virus.yVel = Math.abs(virus.yVel) * -1;\n        }\n      })\n    })\n  }\n\n  columnOutCheck() {\n    this.columns.forEach((column, i) => {\n      if (column.pos.x + column.size.x < 0) {\n        this.columns.splice(i, 1);\n      }\n    })\n  }\n\n  virusOutCheck() {\n    this.viruses.forEach((virus, i) => {\n      if (virus.pos.x + virus.size.x < 0 || virus.pos.y + virus.size.y < 0\n        || virus.pos.y > 1000) {\n        this.viruses.splice(i, 1);\n      }\n    })\n  }\n\n  gameOver() {\n    this.dead = true;\n  }\n\n  showMessage(message) {\n    this.ctx.fillStyle = \"rgba(0, 0, 0, 0.4)\";\n    this.ctx.fillRect(0, 0, 1000, 500);\n    this.ctx.font = \"50px Luckiest Guy\";\n    this.ctx.fillStyle = \"bisque\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(message, 400, 250)\n  }\n\n  requestAnimFrame() {\n    return window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        window.setTimeout(callback, 1000 / 20);\n      }\n  }\n\n  play() {\n    this.update();\n    this.render();\n    if (!this.dead) {\n      this.requestAnimFrame()(this.play.bind(this));\n    } else {\n      this.showMessage(\"Game Over\");\n      this.play_again.classList.remove('hide');\n    }\n  }\n\n  update() {\n    console.log(this.player.xVel);\n    this.timer++;\n    this.updateScore();\n    this.spawnColumn();\n    this.spawnVirus();\n    this.columnCollisionCheck();\n    this.bulletCollisionCheck();\n    this.virusWallCheck();\n    this.virusPlayerCheck();\n    this.columnOutCheck();\n    this.virusOutCheck();\n  }\n\n\n  render() {\n    this.background.drawBackground();\n    this.player.drawPlayer();\n    this.player.updatePos();\n    this.bullets.forEach((bullet) => {\n      bullet.drawBullet();\n    });\n    this.columns.forEach((column) => {\n      column.drawColumn();\n    });\n    this.viruses.forEach((virus) => {\n      virus.drawVirus();\n    })\n  }\n}","const KEYCODE_UP = 38,\n      KEYCODE_DOWN = 40,\n      KEYCODE_LEFT = 37,\n      KEYCODE_RIGHT = 39,\n      KEYCODE_SPACE = 32;\n\nexport let UP = false;\nexport let DOWN = false;\nexport let LEFT = false;\nexport let RIGHT = false;\nexport let SPACE = false;\n\nexport default class KeyHandler {\n  constructor(player) {\n    this.player = player;\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n\n    document.onkeydown = this.handleKeyPress;\n    document.onkeyup = this.handleKeyUp;\n  }\n\n  handleKeyPress(e) {\n    e.preventDefault();\n    switch (e.keyCode) {\n      case KEYCODE_UP:\n        UP = true;\n        break;\n      case KEYCODE_DOWN:\n        DOWN = true;\n        break;\n      case KEYCODE_LEFT:\n        LEFT = true;\n        break;\n      case KEYCODE_RIGHT:\n        RIGHT = true;\n        break;\n      case KEYCODE_SPACE:\n        SPACE = true;\n        break;\n    }\n  }\n\n  handleKeyUp(e) {\n    e.preventDefault();\n    switch (e.keyCode) {\n      case KEYCODE_UP:\n        UP = false;\n        break;\n      case KEYCODE_DOWN:\n        DOWN = false;\n        break;\n      case KEYCODE_LEFT:\n        LEFT = false;\n        break;\n      case KEYCODE_RIGHT:\n        RIGHT = false;\n        break;\n      case KEYCODE_SPACE:\n        SPACE = false;\n        break;\n    }\n  }\n}","import Bullet from './bullet';\nimport { UP, DOWN, LEFT, RIGHT, SPACE } from './key_handler';\nimport KeyHandler from './key_handler';\n\nexport default class Player {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.image = new Image();\n    this.image.src = './assets/images/drix.png';\n\n    this.pos = { x: 500, y: 220 };\n    this.size = { x: 50, y: 50 };\n\n    this.bullets = [];\n    this.fireable = true;\n    this.shoot = this.shoot.bind(this);\n    this.xVel = 4;\n    this.yVel = 6;\n\n    // this.playerHurtbox = {\n    //   x: this.pos.x + this.size.x,\n    //   y: this.pos.y + this.size.y,\n    // }\n  }\n\n  drawPlayer() {\n    this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n    this.bullets.forEach((b, i) => {\n      b.drawBullet();\n      if (b.pos.x > 1000) {\n        this.bullets.splice(i, 1);\n      } else {\n        b.update();\n      }\n    })\n  }\n\n  shoot() {\n    if (SPACE && this.fireable) {\n      this.bullets.push(new Bullet({\n        ctx: this.ctx,\n        x: this.pos.x + 50,\n        y: this.pos.y + 15,\n        dx: 8,\n        dy: 0,\n      }));\n      this.fireable = false;\n      setTimeout(() => { this.fireable = true }, 170);\n    }\n  }\n\n  updatePos() {\n    this.moveUp();\n    this.moveDown();\n    this.moveLeft();\n    this.moveRight();\n    this.shoot();\n  }\n\n  moveUp() {\n    if (UP && this.pos.y > 0) {\n      this.pos.y -= this.yVel;\n    }\n  }\n\n  moveDown() {\n    if (DOWN && (this.pos.y + this.size.y) < 498) {\n      this.pos.y += this.yVel;\n    }\n  }\n\n  moveLeft() {\n    if (LEFT && this.pos.x > 0) {\n      this.pos.x -= this.xVel;\n    }\n  }\n\n  moveRight() {\n    if (RIGHT && this.pos.x < (1000 - this.size.x)) {\n      this.pos.x += this.xVel;\n    } else {\n      if (this.pos.x === 0) {\n        this.pos.x;\n      } else {\n        this.pos.x -= (this.xVel - 0.35);\n      }\n    }\n  }\n}","const Util = {\n  isCollided(source, target) {\n    return !(\n      ( ( source.pos.y + source.size.y ) < ( target.pos.y ) ) ||\n      ( source.pos.y > ( target.pos.y + target.size.y ) ) ||\n      ( ( source.pos.x + source.size.x ) < target.pos.x ) ||\n      ( source.pos.x > ( target.pos.x + target.size.x ) )\n    );\n  },\n\n  isCollidedLeft(source, target) {\n    return (\n      ( ( target.pos.x + target.size.x ) >= source.pos.x ) &&\n      ( ( target.pos.x + target.size.x ) < source.pos.x + source.size.x)\n    );\n  },\n\n  isCollidedRight(source, target) {\n    return (\n      ( ( target.pos.x ) <= source.pos.x + source.size.x) &&\n      ( ( target.pos.x ) > source.pos.x )\n    );\n  },\n\n  isCollidedY(source, target) {\n    return !(\n      ( ( source.pos.y + source.size.y ) < ( target.pos.y ) ) ||\n      ( source.pos.y > ( target.pos.y + target.size.y ) )\n    );\n  }\n}\n\n// randomDirection() {\n//   return Math.floor(Math.random() * 2)\n// }\n\nexport default Util;\n\n  // isCollided(player, section) {\n  //   return !(\n  //     ( ( player.pos.y + player.size.y ) < ( section.pos.y ) ) ||\n  //     ( player.pos.y > ( section.pos.y + section.size.y ) ) ||\n  //     ( ( player.pos.x + player.size.x ) < section.pos.x ) ||\n  //     ( player.pos.x > ( section.pos.x + section.size.x ) )\n  //   );\n  // }\n\n\n  // export function bulletCollided(bullet, section) {\n  //   return !(\n  //     ( ( bullet.pos.y + bullet.size.y ) < ( section.pos.y ) ) ||\n  //     ( bullet.pos.y > ( section.pos.y + section.size.y ) ) ||\n  //     ( ( bullet.pos.x + bullet.size.x ) < section.pos.x ) ||\n  //     ( bullet.pos.x > ( section.pos.x + section.size.x ) )\n  //   );\n  // }\n","import Util from './util';\n\nexport default class Virus {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.image = new Image();\n    this.image.src = './assets/images/virus.png';\n    this\n    this.xVel = -5;\n    this.yVel = (4 * (Math.floor(Math.random() * 2) === 0 ? 1 : -1 ));\n    this.size = { x: 45, y: 45 };\n    this.pos = { x: 980, y: Math.floor(Math.random() * (500 - this.size.y)) };\n  }\n\n  drawVirus() {\n    this.pos.x += this.xVel;\n    this.pos.y += this.yVel;\n    this.ctx.drawImage(this.image, this.pos.x, this.pos.y, this.size.x, this.size.y);\n  }\n}"],"sourceRoot":""}